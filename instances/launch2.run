reset;

suffix lazy IN;

# option solver cplex;
# option cplex_options "time=1800 mipdisplay=1 varsel=4 cutpass=-1";

option solver xpress;
option xpress_options "outlev=1 symmetry=0 cutstrategy=0";

model clique.mod;

# pour la trace

# data divorces.dat;
# data wafa.dat;
# data SocialWorkJ.dat;
# data SupremeCourtnot.dat;
# reset data;
# data SupremeCourtyes.dat;
# data south.dat;
# data scotl.dat;
# data netscience.dat;

# option xpress_options "outlev=1 symmetry=0 cutstrategy=0";

param id 						:= include id.inc;
param name 			symbolic 	:= include name.inc;
param formulation 	symbolic 	:= include formulation.inc;
param run  			symbolic 	:= include run.inc;

param location{1..n};
set un_coloried ordered ;
param noeud;
param nC;

param nbNodes;
param solverTime;
# exit;
printf "Running %s formulation %s run %s\n", name, formulation, run;
# reset data lazy;
# expand;
let KindOfN := formulation;
data ("dat/"&name & ".dat");
let{(i,j) in V2} x[i,j] := 0;

display KindOfN;

let{(i,k,j) in Set1} ctr1[i,k,j].lazy := 1;
let{(j,k,i) in Set2} ctr2[j,k,i].lazy := 1;
let{(i,j,k) in Set3} ctr3[i,j,k].lazy := 1;

if (run=="ALL") then{
	include clique_solve.run;
}else{
	include clique_solve_dyn.run;
}

# break
include build_solution.run;

# display x;
printf ""> ("sol/"&name&"_"&formulation&"_"&run&".sol");
printf{i in 1..n} "%6d\n", location[i]>>  ("sol/"&name&"_"&formulation&"_"&run&".sol");
printf "%10d;%20s;%10d;%10d;%10d;%10d;%10f;%10d;%10f;%10s;%10d;%10d;%10d;%10d;%10d;%10s;\n",
	id,
	name,
	n,
	p,
	m,
	nC,
	modularity,
	nbNodes,
	solverTime,
	formulation,
	card({(i,j) in V2, k in V : j<k and x[i,j] and x[j,k] and not x[i,k]}),
	card({(i,j) in V2 : x[i,j].astatus=="in"}),
	card(V2),
	card({(i,k,j) in Set1 : ctr1[i,k,j].astatus=="in"})+
	card({(j,k,i) in Set2 : ctr2[j,k,i].astatus=="in"})+
	card({(i,j,k) in Set3 : ctr3[i,j,k].astatus=="in"}),
	card(Set1)+card(Set2)+card(Set3),
	run
	>>  result.csv;
# check for transitivity result
# display card(Set1);
# display card(Set2);
# display card(Set3);
# include clique_solve.run;
# include clique_solve_dyn.run;

